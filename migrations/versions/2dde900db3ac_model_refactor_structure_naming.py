"""model refactor: structure + naming

Revision ID: 2dde900db3ac
Revises: 5b130e1b184b
Create Date: 2025-04-03 16:55:49.732046

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2dde900db3ac'
down_revision = '5b130e1b184b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=False),
    sa.Column('invitee_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'FAMILY_MEMBER', 'CO_PARENT', 'PARTNER', 'ROOMMATE', 'NEIGHBOR', 'SITTER', name='roletype'), nullable=False),
    sa.Column('access_level', sa.Enum('ADMIN', 'FULL_ACCESS', 'VIEW_ALL', 'VIEW_LIMITED', name='accesslevel'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', name='invitationstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('blood_type', sa.String(length=10), nullable=True),
    sa.Column('weight', sa.String(length=20), nullable=True),
    sa.Column('weight_updated', sa.String(length=20), nullable=True),
    sa.Column('chronic_conditions', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_level', sa.Enum('ADMIN', 'FULL_ACCESS', 'VIEW_ALL', 'VIEW_LIMITED', name='accesslevel'), nullable=False),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('medical_profile_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=300), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['medical_profile_id'], ['medical_profiles.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('medical_profile_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('dosage', sa.String(length=100), nullable=True),
    sa.Column('duration', sa.String(length=100), nullable=True),
    sa.Column('additional_Info', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['medical_profile_id'], ['medical_profiles.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('medical_profile_id', sa.Integer(), nullable=False),
    sa.Column('test_type', sa.String(length=100), nullable=True),
    sa.Column('result', sa.Text(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('additional_Info', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['medical_profile_id'], ['medical_profiles.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vaccination_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('medical_profile_id', sa.Integer(), nullable=False),
    sa.Column('vaccine_name', sa.String(length=100), nullable=False),
    sa.Column('dose_number', sa.Integer(), nullable=True),
    sa.Column('batch_number', sa.String(length=50), nullable=True),
    sa.Column('previous_vaccination_date', sa.Date(), nullable=True),
    sa.Column('next_vaccination_date', sa.String(length=50), nullable=True),
    sa.Column('additional_Info', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['medical_profile_id'], ['medical_profiles.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vet_visits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('medical_profile_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=200), nullable=True),
    sa.Column('vet_name', sa.String(length=100), nullable=True),
    sa.Column('clinic_info', sa.Text(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('documents', sa.String(length=300), nullable=True),
    sa.ForeignKeyConstraint(['medical_profile_id'], ['medical_profiles.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('medical_record')
    with op.batch_alter_table('pet_data', schema=None) as batch_op:
        batch_op.add_column(sa.Column('favorite_things', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('dislikes', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('social_style', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('communication', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('preferred_treats', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('medical_alerts', sa.Text(), nullable=False))
        batch_op.alter_column('diet',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('allergies',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('behavior_notes',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('additional_info',
               existing_type=sa.TEXT(),
               nullable=False)

    with op.batch_alter_table('pets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('parent_id', sa.Integer(), nullable=False))
        batch_op.alter_column('profile_picture',
               existing_type=sa.VARCHAR(length=300),
               nullable=False)
        batch_op.alter_column('profile_description',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.create_foreign_key(None, 'users', ['parent_id'], ['id'])

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'pets', ['pet_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('sitters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('invitation_status', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', name='invitationstatus'), nullable=False))
        batch_op.drop_column('status')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sitters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', postgresql.ENUM('PENDING', 'ACCEPTED', 'DENIED', name='status'), autoincrement=False, nullable=False))
        batch_op.drop_column('invitation_status')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('pets', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('profile_description',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('profile_picture',
               existing_type=sa.VARCHAR(length=300),
               nullable=True)
        batch_op.drop_column('parent_id')

    with op.batch_alter_table('pet_data', schema=None) as batch_op:
        batch_op.alter_column('additional_info',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('behavior_notes',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('allergies',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('diet',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.drop_column('medical_alerts')
        batch_op.drop_column('preferred_treats')
        batch_op.drop_column('communication')
        batch_op.drop_column('social_style')
        batch_op.drop_column('dislikes')
        batch_op.drop_column('favorite_things')

    op.create_table('medical_record',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pet_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('record_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('vet_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('next_due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('test_results', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('medication', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('documents', sa.VARCHAR(length=300), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], name='medical_record_pet_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='medical_record_pkey')
    )
    op.drop_table('vet_visits')
    op.drop_table('vaccination_records')
    op.drop_table('test_results')
    op.drop_table('medications')
    op.drop_table('medical_documents')
    op.drop_table('permissions')
    op.drop_table('medical_profiles')
    op.drop_table('invitations')
    # ### end Alembic commands ###
