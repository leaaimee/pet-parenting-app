"""Initial migration

Revision ID: 5b130e1b184b
Revises: 
Create Date: 2025-03-06 19:23:58.539247

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5b130e1b184b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('birth_year', sa.Integer(), nullable=True),
    sa.Column('birth_month', sa.Integer(), nullable=True),
    sa.Column('species', sa.String(length=100), nullable=False),
    sa.Column('subspecies', sa.String(length=100), nullable=True),
    sa.Column('profile_picture', sa.String(length=300), nullable=True),
    sa.Column('profile_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'FAMILY_MEMBER', 'CO_PARENT', 'PARTNER', 'ROOMMATE', 'NEIGHBOR', 'SITTER', name='roletype'), nullable=False),
    sa.Column('access_level', sa.Enum('ADMIN', 'FULL_ACCESS', 'VIEW_ALL', 'VIEW_LIMITED', name='accesslevel'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('profile_picture', sa.String(length=300), nullable=True),
    sa.Column('profile_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('medical_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('record_type', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('vet_name', sa.String(length=100), nullable=True),
    sa.Column('next_due_date', sa.DateTime(), nullable=True),
    sa.Column('test_results', sa.Text(), nullable=True),
    sa.Column('medication', sa.Text(), nullable=True),
    sa.Column('documents', sa.String(length=300), nullable=True),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pet_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('diet', sa.Text(), nullable=True),
    sa.Column('behavior_notes', sa.Text(), nullable=True),
    sa.Column('additional_info', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sitters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('sitter_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'DENIED', name='status'), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('access_level', sa.Enum('ADMIN', 'FULL_ACCESS', 'VIEW_ALL', 'VIEW_LIMITED', name='accesslevel'), nullable=False),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.ForeignKeyConstraint(['sitter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('care_type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('recurring', sa.Boolean(), nullable=True),
    sa.Column('frequency', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    op.drop_table('sitters')
    op.drop_table('pet_data')
    op.drop_table('medical_record')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('pets')
    # ### end Alembic commands ###
